# ios/Podfile

platform :ios, '13.0'

# Статическая линковка + модульные заголовки — рекомендовано для Firebase на iOS
use_frameworks! :linkage => :static
use_modular_headers!

ENV['SWIFT_VERSION'] = '5'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Если используешь qr_code_scanner, можно включить модульные заголовки:
# pod 'qr_code_scanner', :modular_headers => true

# Ты использовал MTBBarcodeScanner — оставляем как было
pod 'MTBBarcodeScanner', :modular_headers => true

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Стандартные дополнительные настройки от Flutter
    flutter_additional_ios_build_settings(target)

    # ✅ Главное исправление для Firebase:
    # Разрешаем немодульные заголовки ТОЛЬКО для таргетов Firebase
    if target.name.include?('Firebase') || target.name.downcase.start_with?('firebase')
      target.build_configurations.each do |config|
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      end
    end

    # Универсальные настройки (симулятор arm64 и деплойтаргет)
    target.build_configurations.each do |config|
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end

    # Твоя настройка ONLY_ACTIVE_ARCH — делаем только для Debug,
    # чтобы Release/Archive не страдали
    target.build_configurations.each do |config|
      if config.name == 'Debug'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
      end
    end

    # Твои дефайны для permission_handler — оставил как у тебя, можно включать/выключать ниже.
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',

        ## dart: PermissionGroup.camera
        'PERMISSION_CAMERA=1',

        ## dart: PermissionGroup.microphone
        'PERMISSION_MICROPHONE=1',

        ## dart: PermissionGroup.photos
        'PERMISSION_PHOTOS=1',

        ## dart: PermissionGroup.mediaLibrary
        'PERMISSION_MEDIA_LIBRARY=1',

        # Примеры (оставлены закомментированными):
        # 'PERMISSION_EVENTS=1',
        # 'PERMISSION_REMINDERS=1',
        # 'PERMISSION_CONTACTS=1',
        # 'PERMISSION_LOCATION=1',
        # 'PERMISSION_NOTIFICATIONS=1',
        # 'PERMISSION_SENSORS=1',
        # 'PERMISSION_BLUETOOTH=1',
        # 'PERMISSION_APP_TRACKING_TRANSPARENCY=1',
        # 'PERMISSION_CRITICAL_ALERTS=1',
      ]
    end
  end
end
